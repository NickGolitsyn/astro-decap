---
import CategoryPreview from './CategoryPreview';

export interface Props {
	post: any;
  allCategories: any[];
	allPosts: any[];
}

const { post, allCategories, allPosts } = Astro.props;
console.log(post.select_categories);


const originalDate = post.publishDate;
const [month, day] = originalDate.split(' ');
const reformattedDate = `${month}/${day}`;

const selectedCategories = post.select_categories;

const categoryOrdering = {};
selectedCategories.forEach((story, index) => {
	categoryOrdering[story] = index;
});

const sortedCategories = allCategories
	.filter((p) => selectedCategories.includes(p.frontmatter.title))
	.sort((a, b) => {
		const orderA = categoryOrdering[a.frontmatter.title];
		const orderB = categoryOrdering[b.frontmatter.title];
		return orderA - orderB;
});
---

<article class="mt-10">
	<header class="flex flex-col">
    <p class=" font-medium">номер {post.issueNumber} - {reformattedDate}</p>
    <h1 class="cat-title text-xl sm:text-4xl">{post.title}</h1>
	</header>

  <section class="flex flex-col sm:flex-row gap-5">
    <div class="sm:w-1/2">
      <img width="720" height="420" class="hero-image mx-auto" loading="lazy" src={post.coverImage} />
    </div>
    <div class="sm:w-1/2 flex flex-col gap-y-5 font-light">
      <p class="text-xs md:text-base font-light whitespace-pre-line">{post.description}</p>
    </div>
  </section>
  
	
	<section aria-label="Blog post list" class="mt-20">
    {sortedCategories
      .map((p) => <CategoryPreview client:only="react" post={p} allPosts={allPosts} />)}
  </section>
</article>

<style>
	.cat-title {
		font-weight: 700;
		color: var(--theme-text);
	}
</style>
