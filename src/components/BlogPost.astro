---
export interface Props {
	title: string;
	author: string;
	publishDate: string;
	heroImage: string;
	coverImage: string;
	alt: string;
	htmlfile?: string;
}
const { title, author, publishDate, heroImage, coverImage, alt, htmlfile } = Astro.props as Props;

function resizeIframe(obj) {
			console.log('hi');
			obj.style.height =
				obj.contentWindow.document.documentElement.scrollHeight + "px";
		}
---

<div class="layout container">
	<article>
		<div>
			<header>
				{coverImage && <img width="720" height="420" class="hero-image element my-5" loading="lazy" src={coverImage} alt={alt} />}
				<h1 class="title element">{title}</h1>
				<p>{author}</p>
			</header>
			<main class="element">
				<iframe src={htmlfile} class="w-full" frameborder="0" scrolling="no" id="frame" onload="resizeIframe(this)" />
				<!-- <slot /> -->
			</main>
		</div>
	</article>
	<script is:inline>
		let frame = document.getElementById('frame');
		
		function resizeIframe(obj) {
			const elementsInsideIframe = frame.contentDocument.querySelectorAll('body');
			elementsInsideIframe.forEach((element) => {
				element.style.padding = '0';
				element.style.maxWidth = '100%';
			});
			obj.style.height =
				obj.contentWindow.document.documentElement.scrollHeight + "px";
		}
	</script>
</div>

<style>
	.hero-image {
		width: 35vw;
		object-fit: cover;
		object-position: center;
		max-width: 1280px;
	}

	.content :global(main > * + *) {
		margin-top: 1rem;
	}

	.content :global(h2) {
		margin-top: 4rem;
	}

	header {
		display: flex;
		flex-direction: column;
		text-align: center;
		align-items: center;
		justify-content: center;
	}

	.title {
		font-size: 2.25rem;
		font-weight: 700;
		margin: 0;
	}
</style>
